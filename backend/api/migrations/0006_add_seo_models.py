# Generated by Django 5.2.3 on 2025-08-28 06:08

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0005_dynamicsection_visitorstatistics'),
    ]

    operations = [
        migrations.CreateModel(
            name='RedirectRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_url', models.CharField(help_text='Source URL path', max_length=500, unique=True)),
                ('destination_url', models.CharField(help_text='Destination URL path', max_length=500)),
                ('redirect_type', models.CharField(choices=[('301', '301 Permanent'), ('302', '302 Temporary'), ('307', '307 Temporary'), ('308', '308 Permanent')], default='301', max_length=3)),
                ('description', models.TextField(blank=True, help_text='Why this redirect exists')),
                ('is_active', models.BooleanField(default=True)),
                ('hit_count', models.PositiveIntegerField(default=0, help_text='Number of times used')),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Redirect Rule',
                'verbose_name_plural': 'Redirect Rules',
                'ordering': ['-hit_count', 'source_url'],
            },
        ),
        migrations.CreateModel(
            name='RobotsTxt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(default='User-agent: *\nDisallow: /admin/\nDisallow: /api/\n\nSitemap: /sitemap.xml', help_text='Robots.txt content')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Robots.txt',
                'verbose_name_plural': 'Robots.txt',
            },
        ),
        migrations.CreateModel(
            name='SEOMetaTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_type', models.CharField(choices=[('home', 'Home Page'), ('about', 'About Page'), ('services', 'Services Page'), ('portfolio', 'Portfolio Page'), ('team', 'Team Page'), ('contact', 'Contact Page'), ('blog', 'Blog Page'), ('careers', 'Careers Page'), ('help', 'Help Center'), ('case-studies', 'Case Studies'), ('privacy', 'Privacy Policy'), ('terms', 'Terms & Conditions')], max_length=20, unique=True)),
                ('page_url', models.CharField(blank=True, help_text='Specific URL path', max_length=500)),
                ('meta_title', models.CharField(help_text='SEO title (max 60 chars for Google)', max_length=60)),
                ('meta_description', models.CharField(help_text='SEO description (max 160 chars)', max_length=160)),
                ('meta_keywords', models.TextField(blank=True, help_text='Comma-separated keywords')),
                ('og_title', models.CharField(blank=True, help_text='Facebook/social title', max_length=95)),
                ('og_description', models.CharField(blank=True, help_text='Facebook/social description', max_length=200)),
                ('og_image', models.ImageField(blank=True, help_text='Social media image (1200x630px)', null=True, upload_to='seo/')),
                ('og_image_url', models.URLField(blank=True, help_text='External image URL')),
                ('og_type', models.CharField(default='website', help_text='article, website, etc.', max_length=50)),
                ('twitter_card', models.CharField(default='summary_large_image', help_text='summary, summary_large_image', max_length=50)),
                ('twitter_title', models.CharField(blank=True, help_text='Twitter title', max_length=70)),
                ('twitter_description', models.CharField(blank=True, help_text='Twitter description', max_length=200)),
                ('twitter_image', models.ImageField(blank=True, help_text='Twitter image (1024x512px)', null=True, upload_to='seo/')),
                ('twitter_image_url', models.URLField(blank=True, help_text='External Twitter image URL')),
                ('canonical_url', models.URLField(blank=True, help_text='Canonical URL to prevent duplicate content')),
                ('robots_directive', models.CharField(default='index, follow', help_text='index,follow / noindex,nofollow', max_length=100)),
                ('schema_type', models.CharField(blank=True, help_text='WebPage, Organization, Service, etc.', max_length=50)),
                ('schema_data', models.JSONField(default=dict, help_text='Structured data JSON-LD')),
                ('focus_keyword', models.CharField(blank=True, help_text='Primary keyword to optimize for', max_length=100)),
                ('secondary_keywords', models.TextField(blank=True, help_text='Secondary keywords (comma-separated)')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'SEO Meta Tags',
                'verbose_name_plural': 'SEO Meta Tags',
                'ordering': ['page_type'],
            },
        ),
        migrations.CreateModel(
            name='SEOSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='site gen it', max_length=200)),
                ('site_tagline', models.CharField(blank=True, max_length=300)),
                ('default_meta_description', models.CharField(help_text='Default meta description', max_length=160)),
                ('business_name', models.CharField(max_length=200)),
                ('business_type', models.CharField(default='Web Development Agency', max_length=100)),
                ('address', models.TextField(blank=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('region', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('facebook_url', models.URLField(blank=True)),
                ('twitter_url', models.URLField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('instagram_url', models.URLField(blank=True)),
                ('youtube_url', models.URLField(blank=True)),
                ('google_analytics_id', models.CharField(blank=True, help_text='GA4 Measurement ID', max_length=50)),
                ('google_tag_manager_id', models.CharField(blank=True, max_length=50)),
                ('google_search_console_verification', models.CharField(blank=True, max_length=100)),
                ('bing_webmaster_verification', models.CharField(blank=True, max_length=100)),
                ('facebook_pixel_id', models.CharField(blank=True, max_length=50)),
                ('default_robots_directive', models.CharField(default='index, follow', max_length=100)),
                ('enable_breadcrumbs', models.BooleanField(default=True)),
                ('enable_schema_markup', models.BooleanField(default=True)),
                ('enable_open_graph', models.BooleanField(default=True)),
                ('enable_twitter_cards', models.BooleanField(default=True)),
                ('enable_lazy_loading', models.BooleanField(default=True)),
                ('enable_image_optimization', models.BooleanField(default=True)),
                ('enable_minification', models.BooleanField(default=True)),
                ('custom_head_tags', models.TextField(blank=True, help_text='Custom HTML for <head> section')),
                ('custom_footer_scripts', models.TextField(blank=True, help_text='Custom scripts before </body>')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'SEO Settings',
                'verbose_name_plural': 'SEO Settings',
            },
        ),
        migrations.CreateModel(
            name='SitemapURL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_path', models.CharField(help_text='URL path (e.g., /about, /services)', max_length=500, unique=True)),
                ('full_url', models.URLField(blank=True, help_text='Full URL (auto-generated)')),
                ('priority', models.CharField(choices=[('1.0', 'Highest (1.0)'), ('0.9', 'Very High (0.9)'), ('0.8', 'High (0.8)'), ('0.7', 'Above Normal (0.7)'), ('0.6', 'Normal (0.6)'), ('0.5', 'Below Normal (0.5)'), ('0.4', 'Low (0.4)'), ('0.3', 'Very Low (0.3)'), ('0.2', 'Minimal (0.2)'), ('0.1', 'Lowest (0.1)')], default='0.6', max_length=3)),
                ('change_frequency', models.CharField(choices=[('always', 'Always'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly'), ('never', 'Never')], default='weekly', max_length=10)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_auto_generated', models.BooleanField(default=False, help_text='Auto-generated from content')),
                ('content_type', models.CharField(blank=True, max_length=20)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Sitemap URL',
                'verbose_name_plural': 'Sitemap URLs',
                'ordering': ['-priority', 'url_path'],
            },
        ),
        migrations.CreateModel(
            name='ContentSEOAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('project', 'Project'), ('blog', 'Blog Post'), ('service', 'Service'), ('page', 'Page Content'), ('case_study', 'Case Study')], max_length=20)),
                ('object_id', models.PositiveIntegerField()),
                ('content_title', models.CharField(max_length=200)),
                ('content_url', models.CharField(blank=True, max_length=500)),
                ('overall_score', models.PositiveIntegerField(default=0, help_text='Overall SEO score (0-100)')),
                ('optimization_status', models.CharField(choices=[('excellent', 'Excellent (90-100%)'), ('good', 'Good (70-89%)'), ('fair', 'Fair (50-69%)'), ('poor', 'Poor (0-49%)')], default='poor', max_length=20)),
                ('title_score', models.PositiveIntegerField(default=0)),
                ('meta_description_score', models.PositiveIntegerField(default=0)),
                ('keyword_density_score', models.PositiveIntegerField(default=0)),
                ('content_length_score', models.PositiveIntegerField(default=0)),
                ('heading_structure_score', models.PositiveIntegerField(default=0)),
                ('image_alt_score', models.PositiveIntegerField(default=0)),
                ('internal_links_score', models.PositiveIntegerField(default=0)),
                ('external_links_score', models.PositiveIntegerField(default=0)),
                ('focus_keyword', models.CharField(blank=True, max_length=100)),
                ('keyword_density', models.FloatField(default=0.0, help_text='Keyword density percentage')),
                ('keyword_positions', models.JSONField(default=list, help_text='Keyword positions in content')),
                ('word_count', models.PositiveIntegerField(default=0)),
                ('reading_time', models.PositiveIntegerField(default=0, help_text='Estimated reading time in minutes')),
                ('flesch_reading_score', models.FloatField(default=0.0, help_text='Readability score')),
                ('issues_found', models.JSONField(default=list, help_text='List of SEO issues')),
                ('suggestions', models.JSONField(default=list, help_text='Optimization suggestions')),
                ('last_analyzed', models.DateTimeField(auto_now=True)),
                ('analysis_data', models.JSONField(default=dict, help_text='Detailed analysis data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Content SEO Analysis',
                'verbose_name_plural': 'Content SEO Analysis',
                'ordering': ['-last_analyzed'],
                'unique_together': {('content_type', 'object_id')},
            },
        ),
    ]
